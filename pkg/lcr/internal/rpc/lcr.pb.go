// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: lcr.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for message status.
type Status int32

const (
	Status_UNKNOWN   Status = 0
	Status_RECEIVED  Status = 1
	Status_DISCARDED Status = 2
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "RECEIVED",
		2: "DISCARDED",
	}
	Status_value = map[string]int32{
		"UNKNOWN":   0,
		"RECEIVED":  1,
		"DISCARDED": 2,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_lcr_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_lcr_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_lcr_proto_rawDescGZIP(), []int{0}
}

// The message sent between processes in the LCR algorithm.
type LCRMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid       uint64                 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	MessageId string                 `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	StartTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
}

func (x *LCRMessage) Reset() {
	*x = LCRMessage{}
	mi := &file_lcr_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LCRMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LCRMessage) ProtoMessage() {}

func (x *LCRMessage) ProtoReflect() protoreflect.Message {
	mi := &file_lcr_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LCRMessage.ProtoReflect.Descriptor instead.
func (*LCRMessage) Descriptor() ([]byte, []int) {
	return file_lcr_proto_rawDescGZIP(), []int{0}
}

func (x *LCRMessage) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *LCRMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *LCRMessage) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

// Response message to acknowledge receipt of LCRMessage or termination.
type LCRResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    Status `protobuf:"varint,1,opt,name=status,proto3,enum=lcr.Status" json:"status,omitempty"`
	MessageId string `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
}

func (x *LCRResponse) Reset() {
	*x = LCRResponse{}
	mi := &file_lcr_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LCRResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LCRResponse) ProtoMessage() {}

func (x *LCRResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lcr_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LCRResponse.ProtoReflect.Descriptor instead.
func (*LCRResponse) Descriptor() ([]byte, []int) {
	return file_lcr_proto_rawDescGZIP(), []int{1}
}

func (x *LCRResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNKNOWN
}

func (x *LCRResponse) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

var File_lcr_proto protoreflect.FileDescriptor

var file_lcr_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6c, 0x63, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6c, 0x63, 0x72,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x78,
	0x0a, 0x0a, 0x4c, 0x43, 0x52, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x0b, 0x4c, 0x43, 0x52, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6c, 0x63, 0x72, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x2a, 0x32, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x44, 0x49, 0x53, 0x43, 0x41, 0x52, 0x44, 0x45, 0x44, 0x10, 0x02, 0x32,
	0xaa, 0x01, 0x0a, 0x0a, 0x4c, 0x43, 0x52, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2c,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0f, 0x2e, 0x6c, 0x63, 0x72, 0x2e,
	0x4c, 0x43, 0x52, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x10, 0x2e, 0x6c, 0x63, 0x72,
	0x2e, 0x4c, 0x43, 0x52, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x11,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0f, 0x2e, 0x6c, 0x63, 0x72, 0x2e, 0x4c, 0x43, 0x52, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x10, 0x2e, 0x6c, 0x63, 0x72, 0x2e, 0x4c, 0x43, 0x52, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x16, 0x5a, 0x14,
	0x70, 0x6b, 0x67, 0x2f, 0x6c, 0x63, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lcr_proto_rawDescOnce sync.Once
	file_lcr_proto_rawDescData = file_lcr_proto_rawDesc
)

func file_lcr_proto_rawDescGZIP() []byte {
	file_lcr_proto_rawDescOnce.Do(func() {
		file_lcr_proto_rawDescData = protoimpl.X.CompressGZIP(file_lcr_proto_rawDescData)
	})
	return file_lcr_proto_rawDescData
}

var file_lcr_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_lcr_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_lcr_proto_goTypes = []any{
	(Status)(0),                   // 0: lcr.Status
	(*LCRMessage)(nil),            // 1: lcr.LCRMessage
	(*LCRResponse)(nil),           // 2: lcr.LCRResponse
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 4: google.protobuf.Empty
}
var file_lcr_proto_depIdxs = []int32{
	3, // 0: lcr.LCRMessage.start_time:type_name -> google.protobuf.Timestamp
	0, // 1: lcr.LCRResponse.status:type_name -> lcr.Status
	1, // 2: lcr.LCRService.Message:input_type -> lcr.LCRMessage
	1, // 3: lcr.LCRService.NotifyTermination:input_type -> lcr.LCRMessage
	4, // 4: lcr.LCRService.Ping:input_type -> google.protobuf.Empty
	2, // 5: lcr.LCRService.Message:output_type -> lcr.LCRResponse
	2, // 6: lcr.LCRService.NotifyTermination:output_type -> lcr.LCRResponse
	4, // 7: lcr.LCRService.Ping:output_type -> google.protobuf.Empty
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_lcr_proto_init() }
func file_lcr_proto_init() {
	if File_lcr_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lcr_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lcr_proto_goTypes,
		DependencyIndexes: file_lcr_proto_depIdxs,
		EnumInfos:         file_lcr_proto_enumTypes,
		MessageInfos:      file_lcr_proto_msgTypes,
	}.Build()
	File_lcr_proto = out.File
	file_lcr_proto_rawDesc = nil
	file_lcr_proto_goTypes = nil
	file_lcr_proto_depIdxs = nil
}
